/*
MASV: 47.01.104.045
HO TEN: PHAN VU TUAN ANH
LAB: 03
NGAY: 01/04/2024
*/
USE EMPLOYEE
GO
CREATE PROCEDURE INSERT_STUDENT (
	@STUDENTID	NVARCHAR(20),
	@NAME		NVARCHAR(100),
	@BDAY		DATETIME,
	@ADDRESS	NVARCHAR(200),
	@CLASSID	NVARCHAR(20),
	@USERNAME	NVARCHAR(100),
	@PASSWORD	NVARCHAR(100) -- Will be inserted as text
)
AS
BEGIN
	DECLARE @PASS VARBINARY(MAX)
	SET @PASS = CAST(HASHBYTES('MD5', @PASSWORD) AS VARBINARY(MAX))
	INSERT INTO Student (STUDENTID, NAME, BDAY, ADDRESS, CLASSID, USERNAME, PASSWORD)
	VALUES ( @STUDENTID, @NAME, @BDAY, @ADDRESS, @CLASSID, @USERNAME, @PASS)
END
GO

CREATE PROCEDURE INSERT_EMPLOYEE (
	@EMPLOYEEID NVARCHAR(20),
	@NAME		NVARCHAR(100),
	@EMAIL		VARCHAR(20),
	@SALARY		NVARCHAR(100),	-- Will be inserted as text
	@USERNAME	NVARCHAR(100),
	@PASSWORD	NVARCHAR(100)	-- Will be inserted as text
)
AS
BEGIN
	DECLARE @Enc_SALARY VARBINARY(MAX)
	DECLARE @PASS VARBINARY(MAX)

	-- Encrypting salary
	OPEN SYMMETRIC KEY StudentID_Key  
	DECRYPTION BY CERTIFICATE StuID
	-- SET @Enc_SALARY = ENCRYPTBYKEY(KEY_GUID('StudentID_Key'), CONVERT(VARBINARY(MAX), @SALARY))

	-- SET @Enc_SALARY = CAST(ENCRYPTBYKEY(KEY_GUID('StudentID_Key'), @SALARY) AS VARBINARY(MAX))
	-- SET @Enc_SALARY = CAST(@SALARY AS VARBINARY(MAX))
	-- SET @PASS = CAST(HASHBYTES('SHA1', @PASSWORD) AS VARBINARY(MAX))

	SET @Enc_SALARY = CONVERT(VARBINARY(MAX), ENCRYPTBYKEY(KEY_GUID('StudentID_Key'),  @SALARY))
	SET @PASS = CONVERT(VARBINARY(MAX), HASHBYTES('SHA1', @PASSWORD))

	INSERT INTO Employee (EMPLOYEEID, NAME, EMAIL, SALARY, USERNAME, PASSWORD, Salary_Encrypted)
	VALUES ( @EMPLOYEEID, @NAME, @EMAIL, @Enc_SALARY, @USERNAME, @PASS, @Enc_SALARY )

	CLOSE SYMMETRIC KEY StudentID_Key
END
GO

-- DROP PROCEDURE INSERT_EMPLOYEE;

CREATE PROCEDURE GET_EMPLOYEE_DETAILS
AS
BEGIN
	-- Encrypting salary
	OPEN SYMMETRIC KEY StudentID_Key
	DECRYPTION BY CERTIFICATE StuID
	-- EMPLOYEEID, NAME, EMAIL, Salary_Encrypted,
	SELECT EMPLOYEEID, NAME, EMAIL, Salary_Encrypted, CONVERT(NVARCHAR(MAX), DECRYPTBYKEY(Salary_Encrypted, KEY_ID('StudentID_Key'))) AS Salary_Decrypted FROM Employee
	CLOSE SYMMETRIC KEY StudentID_Key

END
GO